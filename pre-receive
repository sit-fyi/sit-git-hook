#!/usr/bin/env bash

### CONFIGURATION

TARGET_REPO=$(git config sit.target)
targetbranch=$(git config sit.targetbranch)
TARGET_BRANCH=${targetbranch:-master}

###

while read -r oldrev newrev refname; do

    if [ "${newrev}" ==  "0000000000000000000000000000000000000000" ]; then
        # Branch deletion, proceed
        exit 0
    fi

    if [ "${oldrev}" != "0000000000000000000000000000000000000000" ]; then
        echo "Only new branches permitted"
        exit 1
    fi

    echo "Cloning target repo"

    tempdir=$(mktemp -d)

    target_branch="check-${newrev}"

    env -u GIT_QUARANTINE_PATH -u GIT_DIR -u GIT_OBJECT_DIRECTORY -u GIT_ALTERNATE_OBJECT_DIRECTORIES git clone ${TARGET_REPO} "${tempdir}" || exit 1
    env -u GIT_QUARANTINE_PATH git push "${tempdir}" "${newrev}":"refs/heads/${target_branch}" || exit 1
    cd "${tempdir}" && GIT_DIR=${tempdir}/.git env -u GIT_QUARANTINE_PATH  -u GIT_OBJECT_DIRECTORY -u GIT_ALTERNATE_OBJECT_DIRECTORIES git -c user.name="sit-git-hook" -c user.email="git@sit-it.org" rebase "${TARGET_BRANCH}" "${target_branch}"
    cd "${tempdir}" && GIT_DIR=${tempdir}/.git env -u GIT_QUARANTINE_PATH  -u GIT_OBJECT_DIRECTORY -u GIT_ALTERNATE_OBJECT_DIRECTORIES git checkout "${TARGET_BRANCH}"

    files=$(GIT_DIR=${tempdir}/.git env -u GIT_QUARANTINE_PATH  -u GIT_OBJECT_DIRECTORY -u GIT_ALTERNATE_OBJECT_DIRECTORIES git diff --name-only "origin/${TARGET_BRANCH}" "${target_branch}")

    for file in ${files}; do

        if [ "${file:0:11}" != '.sit/issues' ]; then
            echo "${file}" is outside of .sit/issues
            exit 1
        fi

        issue=$(echo "${file}" | cut -d'/' -f 3)
        record=$(echo "${file}" | cut -d'/' -f 4)
        record_path=$(echo "${file}" | cut -d'/' -f 1-4)
        if [ -d "${tempdir}/${record_path}" ]; then
            echo "Record ${issue}/${record} already exists in the target repository"
            exit 1
        fi

        if [ -f "${tempdir}/${file}" ]; then
            echo "File ${file} already exists in the target repository"
            exit 1
        fi
    done

done
