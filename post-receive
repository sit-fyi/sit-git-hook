#!/usr/bin/env bash

### CONFIGURATION

TARGET_REPO=$(git config sit.target)
targetbranch=$(git config sit.targetbranch)
TARGET_BRANCH=${targetbranch:-master}

###

while read -r _ newrev refname; do

    if [ "${newrev}" ==  "0000000000000000000000000000000000000000" ]; then
        # Branch deletion, proceed
        exit 0
    fi

    tempdir=$(mktemp -d)
    target_branch="check-${newrev}"
     
    env -u GIT_QUARANTINE_PATH -u GIT_DIR -u GIT_OBJECT_DIRECTORY -u GIT_ALTERNATE_OBJECT_DIRECTORIES git clone ${TARGET_REPO} "${tempdir}" || exit 1
    env -u GIT_QUARANTINE_PATH git push "${tempdir}" "${newrev}":"refs/heads/${target_branch}" || exit 1
    cd "${tempdir}" && GIT_DIR=${tempdir}/.git env -u GIT_QUARANTINE_PATH  -u GIT_OBJECT_DIRECTORY -u GIT_ALTERNATE_OBJECT_DIRECTORIES git -c user.name="sit-git-hook" -c user.email="git@sit-it.org" rebase "${TARGET_BRANCH}" "${target_branch}"
    cd "${tempdir}" && GIT_DIR=${tempdir}/.git env -u GIT_QUARANTINE_PATH  -u GIT_OBJECT_DIRECTORY -u GIT_ALTERNATE_OBJECT_DIRECTORIES git checkout "${TARGET_BRANCH}"

    echo "Pushing issue ref ${refname} to target"
    cd "${tempdir}" && GIT_DIR=${tempdir}/.git git push "${TARGET_REPO}" "${target_branch}:master" || exit 1

done
